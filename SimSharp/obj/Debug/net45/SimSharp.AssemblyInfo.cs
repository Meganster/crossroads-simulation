//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("HEAL, FH Upper Austria")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyCopyrightAttribute("Andreas Beham")]
[assembly: System.Reflection.AssemblyDescriptionAttribute(@"Sim# aims to port the concepts used in SimPy (https://pypi.python.org/pypi/simpy) to the .NET world. It is implemented in C# and builds on the .NET Framework 4.0. Sim# uses an efficient event queue (adapted from https://bitbucket.org/BlueRaja/high-speed-priority-queue-for-c) that allows to compute models very fast. Simulating 10 years of the MachineShop sample (http://simpy.readthedocs.org/en/latest/examples/machine_shop.html) that uses preemptive resources requires only 2.5s on a Core i7 2.6Ghz. This model generates more than 5 million events.

SimPy allows to model processes easily and with little boiler plate code. A process is described as a method that yields events. When an event is yielded, the process waits on it. Processes are themselves events and so it is convenient to spawn sub-processes that can either be waited upon or that run next to each other. There is no need to inherit from classes or understand a complex object oriented design.")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("3.0.11.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("3.0.11")]
[assembly: System.Reflection.AssemblyProductAttribute("Sim#")]
[assembly: System.Reflection.AssemblyTitleAttribute("SimSharp")]
[assembly: System.Reflection.AssemblyVersionAttribute("3.0.11.0")]

// Generated by the MSBuild WriteCodeFragment class.

